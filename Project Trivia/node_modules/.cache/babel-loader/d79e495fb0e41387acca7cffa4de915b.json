{"ast":null,"code":"var _jsxFileName = \"/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/Questions.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getQuestions } from '../actions';\n\nclass Questions extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  componentDidMount() {\n    const token = this.props.token;\n    const questions = this.props.questions;\n    questions(token);\n  }\n\n  render() {\n    const questio = this.props.questio; // const { question, correct_answer, incorrect_answer } = questions;\n\n    console.log(question);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, questio.map((question, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, question.category)), React.createElement(\"div\", {\n      className: \"field-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, question.question))), React.createElement(\"div\", {\n      className: \"box-alternatives\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"correct-answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, question.correct_answer), question.incorrect_answers.map((iten, position) => React.createElement(\"button\", {\n      type: \"button\",\n      key: position,\n      \"data-testid\": `wrong-answer-${position}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, iten)))))).filter((_, index) => index === 0));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  token: state.user.token,\n  questio: state.game.questions.results\n});\n\nconst mapDispatchToProps = dispatch => ({\n  questions: token => dispatch(getQuestions(token))\n});\n\nQuestions.propTypes = {\n  token: PropTypes.object,\n  question: PropTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/Questions.js"],"names":["React","Component","PropTypes","connect","getQuestions","Questions","componentDidMount","token","props","questions","render","questio","console","log","question","map","index","category","correct_answer","incorrect_answers","iten","position","filter","_","mapStateToProps","state","user","game","results","mapDispatchToProps","dispatch","propTypes","object","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChC;AACA;AACA;AAEAK,EAAAA,iBAAiB,GAAG;AAAA,UACVC,KADU,GACA,KAAKC,KADL,CACVD,KADU;AAAA,UAEVE,SAFU,GAEI,KAAKD,KAFT,CAEVC,SAFU;AAGlBA,IAAAA,SAAS,CAACF,KAAD,CAAT;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKH,KADlB,CACCG,OADD,EAEP;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,OAAO,CAACI,GAAR,CAAY,CAACD,QAAD,EAAWE,KAAX,KACX;AAAK,MAAA,GAAG,EAAGA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,qBAAY,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCF,QAAQ,CAACG,QAA9C,CADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCH,QAAQ,CAACA,QAAzC,CADF,CAJF,CADF,EASE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,qBAAY,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,CAACI,cADZ,CADF,EAIGJ,QAAQ,CAACK,iBAAT,CAA2BJ,GAA3B,CAAgC,CAACK,IAAD,EAAOC,QAAP,KAC/B;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,GAAG,EAAGA,QAFR;AAGE,qBAAe,gBAAeA,QAAS,EAHzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGD,IALH,CADD,CAJH,CADF,CATF,CADD,EA2BEE,MA3BF,CA2BS,CAACC,CAAD,EAAIP,KAAJ,KAAcA,KAAK,KAAK,CA3BjC,CADH,CADF;AAgCD;;AAhD+B;;AAmDlC,MAAMQ,eAAe,GAAIC,KAAD,KAAY;AAClClB,EAAAA,KAAK,EAAEkB,KAAK,CAACC,IAAN,CAAWnB,KADgB;AAElCI,EAAAA,OAAO,EAAEc,KAAK,CAACE,IAAN,CAAWlB,SAAX,CAAqBmB;AAFI,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,SAAS,EAAGF,KAAD,IAAWuB,QAAQ,CAAC1B,YAAY,CAACG,KAAD,CAAb;AADU,CAAf,CAA3B;;AAIAF,SAAS,CAAC0B,SAAV,GAAsB;AACpBxB,EAAAA,KAAK,EAAEL,SAAS,CAAC8B,MADG;AAEpBlB,EAAAA,QAAQ,EAAEZ,SAAS,CAAC+B;AAFA,EAGpBC,UAHF;AAKA,eAAe/B,OAAO,CAACqB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CxB,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getQuestions } from '../actions';\n\nclass Questions extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  componentDidMount() {\n    const { token } = this.props;\n    const { questions } = this.props;\n    questions(token);\n  }\n\n  render() {\n    const { questio } = this.props;\n    // const { question, correct_answer, incorrect_answer } = questions;\n    console.log(question);\n\n    return (\n      <div className=\"container\">\n        {questio.map((question, index) => (\n          <div key={ index }>\n            <div className=\"box-question\">\n              <div className=\"field-category\">\n                <h3 data-testid=\"question-category\">{question.category}</h3>\n              </div>\n              <div className=\"field-question\">\n                <p data-testid=\"question-text\">{question.question}</p>\n              </div>\n            </div>\n            <div className=\"box-alternatives\">\n              <div>\n                <button type=\"button\" data-testid=\"correct-answer\">\n                  {question.correct_answer}\n                </button>\n                {question.incorrect_answers.map(((iten, position) => (\n                  <button\n                    type=\"button\"\n                    key={ position }\n                    data-testid={ `wrong-answer-${position}` }\n                  >\n                    {iten}\n                  </button>\n                )))}\n              </div>\n            </div>\n          </div>\n        )).filter((_, index) => index === 0)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.user.token,\n  questio: state.game.questions.results,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  questions: (token) => dispatch(getQuestions(token)),\n});\n\nQuestions.propTypes = {\n  token: PropTypes.object,\n  question: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}