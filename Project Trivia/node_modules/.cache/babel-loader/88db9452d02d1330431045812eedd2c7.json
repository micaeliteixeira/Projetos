{"ast":null,"code":"var _jsxFileName = \"/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/QuestionCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass QuestionCard extends Component {\n  render() {\n    const _this$props = this.props,\n          onClick = _this$props.onClick,\n          currentQuestion = _this$props.currentQuestion;\n    const category = currentQuestion.category,\n          question = currentQuestion.question;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"QUESTION CARD\", React.createElement(\"div\", {\n      \"data-testidclassName\": \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, category), React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, question)), React.createElement(\"div\", {\n      className: \"answers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"data-testid\": \"correct-answer\",\n      type: \"button\",\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, question.correct_answer), question.incorrect_answers.map((answer, index) => React.createElement(\"button\", {\n      \"data-testid\": `wrong-answer-${index}`,\n      type: \"button\",\n      key: index,\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, answer))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  query: state.game.questions.results\n});\n\nQuestionCard.propTypes = {\n  query: PropTypes.object\n}.isRequired;\nexport default connect(mapStateToProps, null)(QuestionCard);","map":{"version":3,"sources":["/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/QuestionCard.js"],"names":["React","Component","connect","PropTypes","QuestionCard","render","props","onClick","currentQuestion","category","question","correct_answer","incorrect_answers","map","answer","index","mapStateToProps","state","query","game","questions","results","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACnCI,EAAAA,MAAM,GAAG;AAAA,wBAC8B,KAAKC,KADnC;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,eADV,eACUA,eADV;AAAA,UAECC,QAFD,GAEwBD,eAFxB,CAECC,QAFD;AAAA,UAEWC,QAFX,GAEwBF,eAFxB,CAEWE,QAFX;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AAAK,8BAAqB,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,qBAAY,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCD,QAArC,CADF,EAEE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCC,QAAjC,CAFF,CAFF,EAME;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,qBAAY,gBADd;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAGH,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKIG,QAAQ,CAACC,cALb,CADF,EAQGD,QAAQ,CAACE,iBAAT,CAA2BC,GAA3B,CAA+B,CAACC,MAAD,EAASC,KAAT,KAC9B;AAAQ,qBAAe,gBAAeA,KAAM,EAA5C;AAAgD,MAAA,IAAI,EAAC,QAArD;AAA8D,MAAA,GAAG,EAAGA,KAApE;AAA4E,MAAA,OAAO,EAAGR,OAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIO,MADJ,CADD,CARH,CANF,CADF;AAuBD;;AA3BkC;;AA8BrC,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,KAAK,EAAED,KAAK,CAACE,IAAN,CAAWC,SAAX,CAAqBC;AADM,CAAZ,CAAxB;;AAIAjB,YAAY,CAACkB,SAAb,GAAyB;AACvBJ,EAAAA,KAAK,EAAEf,SAAS,CAACoB;AADM,EAEvBC,UAFF;AAIA,eAAetB,OAAO,CAACc,eAAD,EAAkB,IAAlB,CAAP,CAA+BZ,YAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass QuestionCard extends Component {\n  render() {\n    const { onClick, currentQuestion } = this.props;\n    const { category, question } = currentQuestion;\n    return (\n      <div>\n        QUESTION CARD\n        <div data-testidclassName=\"question\">\n          <p data-testid=\"question-category\">{ category }</p>\n          <p data-testid=\"question-text\">{ question }</p>\n        </div>\n        <div className=\"answers\">\n          <button\n            data-testid=\"correct-answer\"\n            type=\"button\"\n            onClick={ onClick }\n          >\n            { question.correct_answer }\n          </button>\n          {question.incorrect_answers.map((answer, index) => (\n            <button data-testid={ `wrong-answer-${index}` } type=\"button\" key={ index } onClick={ onClick }>\n              { answer }\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  query: state.game.questions.results,\n});\n\nQuestionCard.propTypes = {\n  query: PropTypes.object,\n}.isRequired;\n\nexport default connect(mapStateToProps, null)(QuestionCard);\n"]},"metadata":{},"sourceType":"module"}