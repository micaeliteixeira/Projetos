{"ast":null,"code":"var _jsxFileName = \"/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/QuestionCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../css/AnswersButton.css';\n\nclass QuestionCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      correct: false,\n      incorrect: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState({\n      correct: true,\n      incorrect: true\n    });\n  }\n\n  render() {\n    const questions = this.props.questions;\n    const _questions$ = questions[0],\n          category = _questions$.category,\n          question = _questions$.question;\n    const _this$state = this.state,\n          correct = _this$state.correct,\n          incorrect = _this$state.incorrect;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"QUESTION CARD\", React.createElement(\"div\", {\n      \"data-testidclassName\": \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, category), React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, question)), React.createElement(\"div\", {\n      className: \"answers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"data-testid\": \"correct-answer\",\n      className: correct,\n      onClick: this.handleClick,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, questions[0].correct_answer), questions[0].incorrect_answers.map((answer, index) => React.createElement(\"button\", {\n      \"data-testid\": `wrong-answer-${index}`,\n      type: \"button\",\n      key: index,\n      className: incorrect,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, answer))), React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Pr\\xF3xima\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  questions: state.game.questions.results\n});\n\nQuestionCard.propTypes = {\n  questions: PropTypes.object\n}.isRequired;\nexport default connect(mapStateToProps, null)(QuestionCard);","map":{"version":3,"sources":["/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/QuestionCard.js"],"names":["React","Component","connect","PropTypes","QuestionCard","constructor","state","correct","incorrect","handleClick","bind","setState","render","questions","props","category","question","correct_answer","incorrect_answers","map","answer","index","mapStateToProps","game","results","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,0BAAP;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACnCI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,SAAKE,QAAL,CAAc;AACZJ,MAAAA,OAAO,EAAE,IADG;AAEZC,MAAAA,SAAS,EAAE;AAFC,KAAd;AAID;;AAEDI,EAAAA,MAAM,GAAG;AAAA,UACCC,SADD,GACe,KAAKC,KADpB,CACCD,SADD;AAAA,wBAEwBA,SAAS,CAAC,CAAD,CAFjC;AAAA,UAECE,QAFD,eAECA,QAFD;AAAA,UAEWC,QAFX,eAEWA,QAFX;AAAA,wBAGwB,KAAKV,KAH7B;AAAA,UAGCC,OAHD,eAGCA,OAHD;AAAA,UAGUC,SAHV,eAGUA,SAHV;AAKP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AAAK,8BAAqB,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,qBAAY,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCO,QAArC,CADF,EAEE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCC,QAAjC,CAFF,CAFF,EAME;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,qBAAY,gBADd;AAEE,MAAA,SAAS,EAAGT,OAFd;AAGE,MAAA,OAAO,EAAG,KAAKE,WAHjB;AAIE,MAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMII,SAAS,CAAC,CAAD,CAAT,CAAaI,cANjB,CADF,EASGJ,SAAS,CAAC,CAAD,CAAT,CAAaK,iBAAb,CAA+BC,GAA/B,CAAmC,CAACC,MAAD,EAASC,KAAT,KAClC;AACE,qBAAe,gBAAeA,KAAM,EADtC;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,GAAG,EAAGA,KAHR;AAIE,MAAA,SAAS,EAAGb,SAJd;AAKE,MAAA,OAAO,EAAG,KAAKC,WALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOIW,MAPJ,CADD,CATH,CANF,EA2BE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3BF,CADF;AA+BD;;AAtDkC;;AAyDrC,MAAME,eAAe,GAAIhB,KAAD,KAAY;AAClCO,EAAAA,SAAS,EAAEP,KAAK,CAACiB,IAAN,CAAWV,SAAX,CAAqBW;AADE,CAAZ,CAAxB;;AAIApB,YAAY,CAACqB,SAAb,GAAyB;AACvBZ,EAAAA,SAAS,EAAEV,SAAS,CAACuB;AADE,EAEvBC,UAFF;AAIA,eAAezB,OAAO,CAACoB,eAAD,EAAkB,IAAlB,CAAP,CAA+BlB,YAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../css/AnswersButton.css';\n\nclass QuestionCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      correct: false,\n      incorrect: false,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState({\n      correct: true,\n      incorrect: true,\n    });\n  }\n\n  render() {\n    const { questions } = this.props;\n    const { category, question } = questions[0];\n    const { correct, incorrect } = this.state;\n\n    return (\n      <div>\n        QUESTION CARD\n        <div data-testidclassName=\"question\">\n          <p data-testid=\"question-category\">{ category }</p>\n          <p data-testid=\"question-text\">{ question }</p>\n        </div>\n        <div className=\"answers\">\n          <button\n            data-testid=\"correct-answer\"\n            className={ correct }\n            onClick={ this.handleClick }\n            type=\"button\"\n          >\n            { questions[0].correct_answer }\n          </button>\n          {questions[0].incorrect_answers.map((answer, index) => (\n            <button\n              data-testid={ `wrong-answer-${index}` }\n              type=\"button\"\n              key={ index }\n              className={ incorrect }\n              onClick={ this.handleClick }\n            >\n              { answer }\n            </button>\n          ))}\n        </div>\n        <button type=\"button\">Pr√≥xima</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questions: state.game.questions.results,\n});\n\nQuestionCard.propTypes = {\n  questions: PropTypes.object,\n}.isRequired;\n\nexport default connect(mapStateToProps, null)(QuestionCard);\n"]},"metadata":{},"sourceType":"module"}