{"ast":null,"code":"var _jsxFileName = \"/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/Questions.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getQuestions } from '../actions';\n\nclass Questions extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  componentDidMount() {\n    const token = this.props.token;\n    const questions = this.props.questions;\n    questions(token);\n  }\n\n  render() {\n    const question = this.props.question; // const { question, correct_answer, incorrect_answer } = questions;\n\n    console.log(question);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  token: state.user.token,\n  question: state.game.questions.results\n});\n\nconst mapDispatchToProps = dispatch => ({\n  questions: token => dispatch(getQuestions(token))\n});\n\nQuestions.propTypes = {\n  token: PropTypes.object,\n  question: PropTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/Questions.js"],"names":["React","Component","PropTypes","connect","getQuestions","Questions","componentDidMount","token","props","questions","render","question","console","log","mapStateToProps","state","user","game","results","mapDispatchToProps","dispatch","propTypes","object","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChC;AACA;AACA;AAEAK,EAAAA,iBAAiB,GAAG;AAAA,UACVC,KADU,GACA,KAAKC,KADL,CACVD,KADU;AAAA,UAEVE,SAFU,GAEI,KAAKD,KAFT,CAEVC,SAFU;AAGlBA,IAAAA,SAAS,CAACF,KAAD,CAAT;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACCC,QADD,GACc,KAAKH,KADnB,CACCG,QADD,EAEP;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAgCD;;AAhD+B;;AAmDlC,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,KAAK,EAAEQ,KAAK,CAACC,IAAN,CAAWT,KADgB;AAElCI,EAAAA,QAAQ,EAAEI,KAAK,CAACE,IAAN,CAAWR,SAAX,CAAqBS;AAFG,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCX,EAAAA,SAAS,EAAGF,KAAD,IAAWa,QAAQ,CAAChB,YAAY,CAACG,KAAD,CAAb;AADU,CAAf,CAA3B;;AAIAF,SAAS,CAACgB,SAAV,GAAsB;AACpBd,EAAAA,KAAK,EAAEL,SAAS,CAACoB,MADG;AAEpBX,EAAAA,QAAQ,EAAET,SAAS,CAACqB;AAFA,EAGpBC,UAHF;AAKA,eAAerB,OAAO,CAACW,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cd,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getQuestions } from '../actions';\n\nclass Questions extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  componentDidMount() {\n    const { token } = this.props;\n    const { questions } = this.props;\n    questions(token);\n  }\n\n  render() {\n    const { question } = this.props;\n    // const { question, correct_answer, incorrect_answer } = questions;\n    console.log(question);\n\n    return (\n      <div className=\"container\">\n        {/* {questions.map((question, index) => (\n          <div key={ index }>\n            <div className=\"box-question\">\n              <div className=\"field-category\">\n                <h3 data-testid=\"question-category\">{question.category}</h3>\n              </div>\n              <div className=\"field-question\">\n                <p data-testid=\"question-text\">{question.question}</p>\n              </div>\n            </div>\n            <div className=\"box-alternatives\">\n              <div>\n                <button type=\"button\" data-testid=\"correct-answer\">\n                  {question.correct_answer}\n                </button>\n                {question.incorrect_answers.map(((iten, position) => (\n                  <button\n                    type=\"button\"\n                    key={ position }\n                    data-testid={ `wrong-answer-${position}` }\n                  >\n                    {iten}\n                  </button>\n                )))}\n              </div>\n            </div> */}\n        {/* </div>\n        )).filter((_, index) => index === 0)} */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.user.token,\n  question: state.game.questions.results,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  questions: (token) => dispatch(getQuestions(token)),\n});\n\nQuestions.propTypes = {\n  token: PropTypes.object,\n  question: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}