{"ast":null,"code":"import _objectSpread from \"/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { QUESTIONS, ASSERTIONS, SCORE, ADD_RANKING, RESET_GAME } from '../actions';\nconst INITIAL_STATE = {\n  questions: '',\n  assertions: 0,\n  score: 0,\n  ranking: []\n};\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case QUESTIONS:\n      return _objectSpread({}, state, {\n        questions: action.questions\n      });\n\n    case SCORE:\n      return _objectSpread({}, state, {\n        score: action.score\n      });\n\n    case ASSERTIONS:\n      return _objectSpread({}, state, {\n        assertions: action.assertions\n      });\n\n    case ADD_RANKING:\n      return _objectSpread({}, state, {\n        ranking: [...state.ranking, {\n          name: action.name,\n          score: state.score,\n          picture: `https://www.gravatar.com/avatar/${action.hash}`\n        }]\n      });\n\n    case RESET_GAME:\n      return _objectSpread({}, state, {\n        score: 0,\n        assertions: 0\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/reducers/game.js"],"names":["QUESTIONS","ASSERTIONS","SCORE","ADD_RANKING","RESET_GAME","INITIAL_STATE","questions","assertions","score","ranking","state","action","type","name","picture","hash"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,KAAhC,EAAuCC,WAAvC,EAAoDC,UAApD,QAAsE,YAAtE;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,UAAU,EAAE,CAFQ;AAGpBC,EAAAA,KAAK,EAAE,CAHa;AAIpBC,EAAAA,OAAO,EAAE;AAJW,CAAtB;AAOA,eAAe,UAAUC,KAAK,GAAGL,aAAlB,EAAiCM,MAAjC,EAAyC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKZ,SAAL;AACE,+BAAYU,KAAZ;AAAmBJ,QAAAA,SAAS,EAAEK,MAAM,CAACL;AAArC;;AACF,SAAKJ,KAAL;AACE,+BAAYQ,KAAZ;AAAmBF,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAAjC;;AACF,SAAKP,UAAL;AACE,+BAAYS,KAAZ;AAAmBH,QAAAA,UAAU,EAAEI,MAAM,CAACJ;AAAtC;;AACF,SAAKJ,WAAL;AACE,+BAAYO,KAAZ;AACED,QAAAA,OAAO,EAAE,CACP,GAAGC,KAAK,CAACD,OADF,EAEP;AAAEI,UAAAA,IAAI,EAAEF,MAAM,CAACE,IAAf;AAAqBL,UAAAA,KAAK,EAAEE,KAAK,CAACF,KAAlC;AAAyCM,UAAAA,OAAO,EAAG,mCAAkCH,MAAM,CAACI,IAAK;AAAjG,SAFO;AADX;;AAKF,SAAKX,UAAL;AACE,+BAAYM,KAAZ;AAAmBF,QAAAA,KAAK,EAAE,CAA1B;AAA6BD,QAAAA,UAAU,EAAE;AAAzC;;AACF;AACE,aAAOG,KAAP;AAhBF;AAkBD","sourcesContent":["import { QUESTIONS, ASSERTIONS, SCORE, ADD_RANKING, RESET_GAME } from '../actions';\n\nconst INITIAL_STATE = {\n  questions: '',\n  assertions: 0,\n  score: 0,\n  ranking: [],\n};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case QUESTIONS:\n    return { ...state, questions: action.questions };\n  case SCORE:\n    return { ...state, score: action.score };\n  case ASSERTIONS:\n    return { ...state, assertions: action.assertions };\n  case ADD_RANKING:\n    return { ...state,\n      ranking: [\n        ...state.ranking,\n        { name: action.name, score: state.score, picture: `https://www.gravatar.com/avatar/${action.hash}` },\n      ] };\n  case RESET_GAME:\n    return { ...state, score: 0, assertions: 0 };\n  default:\n    return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}