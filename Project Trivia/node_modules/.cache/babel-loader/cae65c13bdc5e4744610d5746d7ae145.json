{"ast":null,"code":"var _jsxFileName = \"/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/Questions.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getQuestions } from '../actions';\n\nclass Questions extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  componentDidMount() {\n    const token = this.props.token;\n    const questions = this.props.questions;\n    questions(token);\n  }\n\n  render() {\n    // const { question, correct_answer, incorrect_answer } = this.props.questions[0];\n    console.log(this.props.questions);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \" \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"correct-answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" \"), React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \" \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \" PR\\xD3XIMA \")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  token: state.user.token,\n  questions: state.game.questions.results\n});\n\nconst mapDispatchToProps = dispatch => ({\n  questions: token => dispatch(getQuestions(token))\n});\n\nQuestions.propTypes = {\n  token: PropTypes.object,\n  question: PropTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/Questions.js"],"names":["React","Component","PropTypes","connect","getQuestions","Questions","componentDidMount","token","props","questions","render","console","log","mapStateToProps","state","user","game","results","mapDispatchToProps","dispatch","propTypes","object","question","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChC;AACA;AACA;AAEAK,EAAAA,iBAAiB,GAAG;AAAA,UACVC,KADU,GACA,KAAKC,KADL,CACVD,KADU;AAAA,UAEVE,SAFU,GAEI,KAAKD,KAFT,CAEVC,SAFU;AAGlBA,IAAAA,SAAS,CAACF,KAAD,CAAT;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,SAAvB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,qBAAY,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,qBAAY,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CAJF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CARF,CADF;AAcD;;AA5B+B;;AA+BlC,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAClCP,EAAAA,KAAK,EAAEO,KAAK,CAACC,IAAN,CAAWR,KADgB;AAElCE,EAAAA,SAAS,EAAEK,KAAK,CAACE,IAAN,CAAWP,SAAX,CAAqBQ;AAFE,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCV,EAAAA,SAAS,EAAGF,KAAD,IAAWY,QAAQ,CAACf,YAAY,CAACG,KAAD,CAAb;AADU,CAAf,CAA3B;;AAIAF,SAAS,CAACe,SAAV,GAAsB;AACpBb,EAAAA,KAAK,EAAEL,SAAS,CAACmB,MADG;AAEpBC,EAAAA,QAAQ,EAAEpB,SAAS,CAACqB;AAFA,EAGpBC,UAHF;AAKA,eAAerB,OAAO,CAACU,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cb,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getQuestions } from '../actions';\n\nclass Questions extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  componentDidMount() {\n    const { token } = this.props;\n    const { questions } = this.props;\n    questions(token);\n  }\n\n  render() {\n    // const { question, correct_answer, incorrect_answer } = this.props.questions[0];\n    console.log(this.props.questions);\n    return (\n      <div>\n        <div data-testid=\"question-category\">\n          <p data-testid=\"question-text\"> </p>\n        </div>\n        <div>\n          <button type=\"button\" data-testid=\"correct-answer\"> </button>\n          <button type=\"button\"> </button>\n        </div>\n        <div>\n          <button type=\"button\"> PRÃ“XIMA </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.user.token,\n  questions: state.game.questions.results,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  questions: (token) => dispatch(getQuestions(token)),\n});\n\nQuestions.propTypes = {\n  token: PropTypes.object,\n  question: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}