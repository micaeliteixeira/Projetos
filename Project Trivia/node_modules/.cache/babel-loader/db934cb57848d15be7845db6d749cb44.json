{"ast":null,"code":"var _jsxFileName = \"/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/pages/Ranking.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass Ranking extends Component {\n  render() {\n    const ranking = this.props.ranking;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      \"data-testid\": \"ranking-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Ranking\"), ranking.sort((a, b) => b.score - a.score).map((player, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: player.picture,\n      alt: player.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      \"data-testid\": `player-name-${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, player.name), React.createElement(\"p\", {\n      \"data-testid\": `player-score-${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, player.score))), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-go-home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"JOGAR NOVAMENTE\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  ranking: state.game.ranking\n});\n\nRanking.propTypes = {\n  ranking: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default connect(mapStateToProps)(Ranking);","map":{"version":3,"sources":["/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/pages/Ranking.js"],"names":["React","Component","connect","Link","PropTypes","Ranking","render","ranking","props","sort","a","b","score","map","player","index","picture","name","mapStateToProps","state","game","propTypes","arrayOf","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC9BK,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGA,OAAO,CACLE,IADF,CACO,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,KAAF,GAAUF,CAAC,CAACE,KAD7B,EAEEC,GAFF,CAEM,CAACC,MAAD,EAASC,KAAT,KACH;AAAK,MAAA,GAAG,EAAGA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAGD,MAAM,CAACE,OAAlB;AAA4B,MAAA,GAAG,EAAGF,MAAM,CAACG,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAG,qBAAe,eAAcF,KAAM,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2CD,MAAM,CAACG,IAAlD,CAFF,EAGE;AAAG,qBAAe,gBAAeF,KAAM,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4CD,MAAM,CAACF,KAAnD,CAHF,CAHH,CAFH,EAWE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,qBAAY,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAXF,CADF;AAiBD;;AApB6B;;AAuBhC,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,OAAO,EAAEY,KAAK,CAACC,IAAN,CAAWb;AADc,CAAZ,CAAxB;;AAIAF,OAAO,CAACgB,SAAR,GAAoB;AAClBd,EAAAA,OAAO,EAAEH,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACmB,MAA5B,EAAoCC;AAD3B,CAApB;AAIA,eAAetB,OAAO,CAACgB,eAAD,CAAP,CAAyBb,OAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass Ranking extends Component {\n  render() {\n    const { ranking } = this.props;\n    return (\n      <div>\n        <h1 data-testid=\"ranking-title\">Ranking</h1>\n        {ranking\n          .sort((a, b) => b.score - a.score)\n          .map((player, index) => (\n            <div key={ index }>\n              <img src={ player.picture } alt={ player.name } />\n              <p data-testid={ `player-name-${index}` }>{player.name}</p>\n              <p data-testid={ `player-score-${index}` }>{player.score}</p>\n            </div>\n          ))}\n        <Link to=\"/\">\n          <button type=\"button\" data-testid=\"btn-go-home\">JOGAR NOVAMENTE</button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ranking: state.game.ranking,\n});\n\nRanking.propTypes = {\n  ranking: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps)(Ranking);\n"]},"metadata":{},"sourceType":"module"}