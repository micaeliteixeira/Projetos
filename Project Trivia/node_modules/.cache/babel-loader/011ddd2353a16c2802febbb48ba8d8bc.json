{"ast":null,"code":"var _jsxFileName = \"/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/pages/Game.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Header, QuestionCard, Loading } from '../components';\nimport { getQuestions } from '../actions';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n    this.updateState = this.updateState.bind(this);\n  }\n\n  async componentDidMount() {\n    const _this$props = this.props,\n          token = _this$props.token,\n          dispatchQuestions = _this$props.dispatchQuestions;\n    await dispatchQuestions(token);\n    this.updateState();\n  }\n\n  updateState() {\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  render() {\n    const isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), isLoading ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }) : React.createElement(QuestionCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  token: state.user.token\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchQuestions: token => dispatch(getQuestions(token))\n});\n\nGame.propTypes = {\n  token: PropTypes.array,\n  dispatchQuestions: PropTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/pages/Game.js"],"names":["React","Component","connect","PropTypes","Header","QuestionCard","Loading","getQuestions","Game","constructor","props","state","isLoading","updateState","bind","componentDidMount","token","dispatchQuestions","setState","render","mapStateToProps","user","mapDispatchToProps","dispatch","propTypes","array","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,OAA/B,QAA8C,eAA9C;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAC3BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAED,QAAMC,iBAAN,GAA0B;AAAA,wBACa,KAAKL,KADlB;AAAA,UAChBM,KADgB,eAChBA,KADgB;AAAA,UACTC,iBADS,eACTA,iBADS;AAExB,UAAMA,iBAAiB,CAACD,KAAD,CAAvB;AACA,SAAKH,WAAL;AACD;;AAEDA,EAAAA,WAAW,GAAG;AACZ,SAAKK,QAAL,CAAc;AACZN,MAAAA,SAAS,EAAE;AADC,KAAd;AAGD;;AAEDO,EAAAA,MAAM,GAAG;AAAA,UACCP,SADD,GACe,KAAKD,KADpB,CACCC,SADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGA,SAAS,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAiB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF7B,CADF;AAMD;;AA7B0B;;AAgC7B,MAAMQ,eAAe,GAAIT,KAAD,KAAY;AAClCK,EAAAA,KAAK,EAAEL,KAAK,CAACU,IAAN,CAAWL;AADgB,CAAZ,CAAxB;;AAIA,MAAMM,kBAAkB,GAAIC,QAAD,KAAe;AACxCN,EAAAA,iBAAiB,EAAGD,KAAD,IAAWO,QAAQ,CAAChB,YAAY,CAACS,KAAD,CAAb;AADE,CAAf,CAA3B;;AAIAR,IAAI,CAACgB,SAAL,GAAiB;AACfR,EAAAA,KAAK,EAAEb,SAAS,CAACsB,KADF;AAEfR,EAAAA,iBAAiB,EAAEd,SAAS,CAACuB;AAFd,EAGfC,UAHF;AAKA,eAAezB,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Header, QuestionCard, Loading } from '../components';\nimport { getQuestions } from '../actions';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n    };\n    this.updateState = this.updateState.bind(this);\n  }\n\n  async componentDidMount() {\n    const { token, dispatchQuestions } = this.props;\n    await dispatchQuestions(token);\n    this.updateState();\n  }\n\n  updateState() {\n    this.setState({\n      isLoading: false,\n    });\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <div>\n        <Header />\n        {isLoading ? <Loading /> : <QuestionCard />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.user.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchQuestions: (token) => dispatch(getQuestions(token)),\n});\n\nGame.propTypes = {\n  token: PropTypes.array,\n  dispatchQuestions: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}