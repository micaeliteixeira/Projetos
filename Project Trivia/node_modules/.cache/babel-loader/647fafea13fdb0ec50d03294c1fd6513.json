{"ast":null,"code":"import _extends from \"/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/Questions.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getQuestions } from '../actions';\n\nclass Questions extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n  componentDidMount() {\n    const token = this.props.token;\n    const questions = this.props.questions;\n    questions(token);\n  }\n\n  render() {\n    const question = _extends({}, this.props[0]);\n\n    console.log(question);\n    return (// <div>\n      //   {question.map((query, index) => (\n      //     <div data-testid=\"question-category\">\n      //       <p>\n      //         {' '}\n      //         {query.category}\n      //       </p>\n      //     </div>\n      //   ))}\n      // </div>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        \"data-testid\": \"question-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        \"data-testid\": \"question-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \" xxxxxx \")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  token: state.user.token,\n  question: state.game.questions\n});\n/* o question do mapStateToProps tem que ser importando ali com question ou outro nome diferente de questions seão da erro,\nalternativa para ficar como questions é fazer toda a requisição do token na pag Game */\n\n\nconst mapDispatchToProps = dispatch => ({\n  questions: token => dispatch(getQuestions(token))\n});\n\nQuestions.propTypes = {\n  token: PropTypes.object,\n  question: PropTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/Questions.js"],"names":["React","Component","PropTypes","connect","getQuestions","Questions","componentDidMount","token","props","questions","render","question","console","log","mapStateToProps","state","user","game","mapDispatchToProps","dispatch","propTypes","object","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChC;AACA;AACA;AAEAK,EAAAA,iBAAiB,GAAG;AAAA,UACVC,KADU,GACA,KAAKC,KADL,CACVD,KADU;AAAA,UAEVE,SAFU,GAEI,KAAKD,KAFT,CAEVC,SAFU;AAGlBA,IAAAA,SAAS,CAACF,KAAD,CAAT;AACD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACIC,QADJ,gBACiB,KAAKH,KAAL,CAAW,CAAX,CADjB;;AAEPI,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,WACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,uBAAY,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,uBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF;AAXF;AAkBD;;AAjC+B;;AAoClC,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,KAAK,EAAEQ,KAAK,CAACC,IAAN,CAAWT,KADgB;AAElCI,EAAAA,QAAQ,EAAEI,KAAK,CAACE,IAAN,CAAWR;AAFa,CAAZ,CAAxB;AAKA;;;;AAGA,MAAMS,kBAAkB,GAAIC,QAAD,KAAe;AACxCV,EAAAA,SAAS,EAAGF,KAAD,IAAWY,QAAQ,CAACf,YAAY,CAACG,KAAD,CAAb;AADU,CAAf,CAA3B;;AAIAF,SAAS,CAACe,SAAV,GAAsB;AACpBb,EAAAA,KAAK,EAAEL,SAAS,CAACmB,MADG;AAEpBV,EAAAA,QAAQ,EAAET,SAAS,CAACoB;AAFA,EAGpBC,UAHF;AAKA,eAAepB,OAAO,CAACW,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cb,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getQuestions } from '../actions';\n\nclass Questions extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  componentDidMount() {\n    const { token } = this.props;\n    const { questions } = this.props;\n    questions(token);\n  }\n\n  render() {\n    const { ...question } = this.props[0];\n    console.log(question);\n\n    return (\n      // <div>\n      //   {question.map((query, index) => (\n      //     <div data-testid=\"question-category\">\n      //       <p>\n      //         {' '}\n      //         {query.category}\n      //       </p>\n      //     </div>\n      //   ))}\n      // </div>\n      <div>\n        <div data-testid=\"question-category\">\n          <p data-testid=\"question-text\"> xxxxxx </p>\n        </div>\n        <div />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.user.token,\n  question: state.game.questions,\n});\n\n/* o question do mapStateToProps tem que ser importando ali com question ou outro nome diferente de questions seão da erro,\nalternativa para ficar como questions é fazer toda a requisição do token na pag Game */\n\nconst mapDispatchToProps = (dispatch) => ({\n  questions: (token) => dispatch(getQuestions(token)),\n});\n\nQuestions.propTypes = {\n  token: PropTypes.object,\n  question: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}