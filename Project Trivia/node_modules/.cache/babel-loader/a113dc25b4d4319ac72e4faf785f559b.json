{"ast":null,"code":"var _jsxFileName = \"/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/QuestionCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AnswersButton from '../css/AnswersButton.css';\n\nclass QuestionCard extends Component {\n  render() {\n    const questions = this.props.questions;\n    const _questions$ = questions[0],\n          category = _questions$.category,\n          question = _questions$.question;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"QUESTION CARD\", React.createElement(\"div\", {\n      \"data-testidclassName\": \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, category), React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, question)), React.createElement(\"div\", {\n      className: \"answers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      \"data-testid\": \"correct-answer\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, questions[0].correct_answer), questions[0].incorrect_answers.map((answer, index) => React.createElement(\"button\", {\n      \"data-testid\": `wrong-answer-${index}`,\n      type: \"button\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, answer))), React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Pr\\xF3xima\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  questions: state.game.questions.results\n});\n\nQuestionCard.propTypes = {\n  questions: PropTypes.object\n}.isRequired;\nexport default connect(mapStateToProps, null)(QuestionCard);","map":{"version":3,"sources":["/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/QuestionCard.js"],"names":["React","Component","connect","PropTypes","AnswersButton","QuestionCard","render","questions","props","category","question","correct_answer","incorrect_answers","map","answer","index","mapStateToProps","state","game","results","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACnCK,EAAAA,MAAM,GAAG;AAAA,UACCC,SADD,GACe,KAAKC,KADpB,CACCD,SADD;AAAA,wBAEwBA,SAAS,CAAC,CAAD,CAFjC;AAAA,UAECE,QAFD,eAECA,QAFD;AAAA,UAEWC,QAFX,eAEWA,QAFX;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AAAK,8BAAqB,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,qBAAY,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCD,QAArC,CADF,EAEE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCC,QAAjC,CAFF,CAFF,EAME;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,qBAAY,gBADd;AAEE,MAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIIH,SAAS,CAAC,CAAD,CAAT,CAAaI,cAJjB,CADF,EAOGJ,SAAS,CAAC,CAAD,CAAT,CAAaK,iBAAb,CAA+BC,GAA/B,CAAmC,CAACC,MAAD,EAASC,KAAT,KAClC;AAAQ,qBAAe,gBAAeA,KAAM,EAA5C;AAAgD,MAAA,IAAI,EAAC,QAArD;AAA8D,MAAA,GAAG,EAAGA,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,MADJ,CADD,CAPH,CANF,EAmBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBF,CADF;AAuBD;;AA3BkC;;AA8BrC,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,SAAS,EAAEU,KAAK,CAACC,IAAN,CAAWX,SAAX,CAAqBY;AADE,CAAZ,CAAxB;;AAIAd,YAAY,CAACe,SAAb,GAAyB;AACvBb,EAAAA,SAAS,EAAEJ,SAAS,CAACkB;AADE,EAEvBC,UAFF;AAIA,eAAepB,OAAO,CAACc,eAAD,EAAkB,IAAlB,CAAP,CAA+BX,YAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AnswersButton from '../css/AnswersButton.css';\n\nclass QuestionCard extends Component {\n  render() {\n    const { questions } = this.props;\n    const { category, question } = questions[0];\n    return (\n      <div>\n        QUESTION CARD\n        <div data-testidclassName=\"question\">\n          <p data-testid=\"question-category\">{ category }</p>\n          <p data-testid=\"question-text\">{ question }</p>\n        </div>\n        <div className=\"answers\">\n          <button\n            data-testid=\"correct-answer\"\n            type=\"button\"\n          >\n            { questions[0].correct_answer }\n          </button>\n          {questions[0].incorrect_answers.map((answer, index) => (\n            <button data-testid={ `wrong-answer-${index}` } type=\"button\" key={ index }>\n              { answer }\n            </button>\n          ))}\n        </div>\n        <button type=\"button\">Pr√≥xima</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questions: state.game.questions.results,\n});\n\nQuestionCard.propTypes = {\n  questions: PropTypes.object,\n}.isRequired;\n\nexport default connect(mapStateToProps, null)(QuestionCard);\n"]},"metadata":{},"sourceType":"module"}