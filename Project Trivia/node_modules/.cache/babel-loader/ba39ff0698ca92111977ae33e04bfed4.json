{"ast":null,"code":"var _jsxFileName = \"/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/Header.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport { sendScore } from '../actions';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 5,\n      timer: 30\n    };\n  }\n\n  componentDidMount() {\n    const dispatchScore = this.props.dispatchScore;\n    const score = this.state.score;\n    dispatchScore(score);\n    const mil = 1000;\n    setInterval(() => this.counting(), mil);\n  }\n\n  counting() {\n    const timer = this.state.timer;\n    const timeQuestion = 30;\n\n    if (timer <= timeQuestion && timer > 0) {\n      this.setState(prevState => ({\n        timer: prevState.timer - 1\n      }));\n    } else {\n      const wrongAnswer = document.querySelector('[data-testid=\"correct-answer\"]');\n      wrongAnswer.disabled = true;\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          email = _this$props.email,\n          name = _this$props.name,\n          score = _this$props.score;\n    const timer = this.state.timer;\n    const hash = md5(email).toString();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      \"data-testid\": \"header-profile-picture\",\n      src: `https://www.gravatar.com/avatar/${hash}`,\n      alt: \"imgProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      \"data-testid\": \"header-player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Name:\", name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Timer:\", timer), React.createElement(\"span\", {\n      \"data-testid\": \"header-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Score:\", score));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchScore: score => dispatch(sendScore(score))\n});\n\nconst mapStateToProps = state => ({\n  email: state.user.email,\n  name: state.user.name,\n  score: state.user.score\n});\n\nHeader.propTypes = {\n  dispatchScore: PropTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/home/micaeli/Trybe/Proj.Obrig/sd-06-project-trivia-react-redux/src/components/Header.js"],"names":["React","Component","connect","md5","PropTypes","sendScore","Header","constructor","props","state","score","timer","componentDidMount","dispatchScore","mil","setInterval","counting","timeQuestion","setState","prevState","wrongAnswer","document","querySelector","disabled","render","email","name","hash","toString","mapDispatchToProps","dispatch","mapStateToProps","user","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport { sendScore } from '../actions';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 5,\n      timer: 30,\n    };\n  }\n\n  componentDidMount() {\n    const { dispatchScore } = this.props;\n    const { score } = this.state;\n    dispatchScore(score);\n    const mil = 1000;\n    setInterval(() => this.counting(), mil);\n  }\n\n  counting() {\n    const { timer } = this.state;\n    const timeQuestion = 30;\n    if (timer <= timeQuestion && timer > 0) {\n      this.setState((prevState) => ({\n        timer: prevState.timer - 1,\n      }));\n    } else {\n      const wrongAnswer = document.querySelector(\n        '[data-testid=\"correct-answer\"]',\n      );\n      wrongAnswer.disabled = true;\n    }\n  }\n\n  render() {\n    const { email, name, score } = this.props;\n    const { timer } = this.state;\n    const hash = md5(email).toString();\n    return (\n      <div>\n        <img\n          data-testid=\"header-profile-picture\"\n          src={ `https://www.gravatar.com/avatar/${hash}` }\n          alt=\"imgProfile\"\n        />\n        <p data-testid=\"header-player-name\">\n          Name:\n          {name}\n        </p>\n        <p>\n          Timer:\n          {timer}\n        </p>\n        <span data-testid=\"header-score\">\n          Score:\n          {score}\n        </span>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchScore: (score) => dispatch(sendScore(score)),\n});\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  name: state.user.name,\n  score: state.user.score,\n});\n\nHeader.propTypes = {\n  dispatchScore: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}